#-------------------------
q=2^3
print(q)
#----------------------------
#6
A=matrix(c(1,2,4,3),2,2)
print(det(inv(A)))
print(det(A)^-1)
#----------------------------
#6
A=matrix(c(1,2,4,3),2,2)
# print(det(inv(A)))
# print(det(A)^-1)
B=matrix(c(1,0,0,1),2,2)
print(det(A%*%B))
print(det(A)*det(B))
#------------------------
#7
A=matrix(c(2,1,3,-1,1,-3,,3,-1,8),3,3,byrow = T)
#------------------------
#7
A=matrix(c(2,1,3,-1,1,-3,3,-1,8),3,3,byrow = T)
View(A)
print(det(A))
#part2
v1=matrix(c(2,1,3),3,1,byrow = F)
View(v1)
v2=matrix(c(1,1,-2),3,1,byrow = F)
v3=matrix(c(3,-3,8),3,1,byrow = F)
View(v2)
View(v3)
#8
A=matrix(c(1,2,3,2,5,7,2,4,6),3,3)
#8
A=matrix(c(1,2,3,2,5,7,2,4,6),3,3,byrow = T)
print(Rank(A))
print(rank(A))
#9
v1=matrix(c(1,-1,-2),3,1)
v2=matrix(c(2,0,1),3,1,byrow = T)
Z=v1%*%v2
View(v1)
View(v2)
#9
v1=matrix(c(1,-1,-2),3,1)
v2=matrix(c(2,0,1),3,1)
v2=matrix(c(2,0,1),1,3)
Z=v1%*%v2
print(Z)
print(det(Z))
#4
A=matrix(c(1,2,4,3))
View(A)
#4
A=matrix(c(1,2,4,3),2,2)
View(A)
print(eigen(A))
A=matrix(1:9,3,3)
B=matrix(10:18,3,3)
mylist=list(A,B)
print(mylist)
lapply(mylist, det)
dia=list(1,2,3,4)
len=list(1,2,3,4)
vol=mapply(volcyl,dia,len)
print(vol)
source("D:/Visual Studios/GIT-2/R-Studio/Week-3/Probablity.R", echo=TRUE)
View(massF)
source("D:/Visual Studios/GIT-2/R-Studio/Week-3/massF.R", echo=TRUE)
prob=massF(5,0.5,10)
print(prob)
source("D:/Visual Studios/GIT-2/R-Studio/Week-3/massF.R", echo=TRUE)
prob=massF(5,0.5,10)
print(prob)
source("D:/Visual Studios/GIT-2/R-Studio/Week-3/massF.R", echo=TRUE)
n=20
p=0.5
for (k in n) {
prob=massF(k,p,n)
print(prob)
}
source("D:/Visual Studios/GIT-2/R-Studio/Week-3/massF.R", echo=TRUE)
n=20
p=0.5
for (k in n) {
prob=massF(k,p,n)
print(prob)
}
source("D:/Visual Studios/GIT-2/R-Studio/Week-3/massF.R", echo=TRUE)
n=20
p=0.5
for (k in n) {
prob=massF(k,p,n)
print(prob)
}
n=20
p=0.5
k=0
for (k in n) {
prob=massF(k,p,n)
print(prob)
}
n=20
p=0.5
k=0
i=0
prob[n]
for (k in n) {
prob[i]=massF(k,p,n)
print(prob[i])
i=i+1
}
x=n
y=prob
n=20
p=0.5
k=0
for (k in n) {
prob=massF(k,p,n)
print(prob)
}
# n=20
# p=0.5
k=0
for (k in n) {
prob=massF(k,0.5,20)
print(prob)
}
a=c(55,55,59,60,63,65,66,67,67,67,71,71,72,73,75,75,78,81,82,83)
b=var(a)#sample variance
#for population variance multiply sample varience by (n-1)/n
print(b)
c=mad(a)#mean absolute deviation
print(c)
A=matrix(c(8,-4,-4,4),2,2,byrow = T)
View(A)
A=matrix(c(8,-4,-4,4),2,2,byrow = T)
print(eigen(A))
install.packages("lpSolve")
install.packages("lpSolve")
library(lpSolve)
